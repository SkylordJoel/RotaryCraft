/*******************************************************************************
 * @author Reika Kalseki
 * 
 * Copyright 2014
 * 
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 14/07/2013 4:24:29 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Reika.RotaryCraft.Models;

import Reika.DragonAPI.Instantiable.Rendering.LODModelPart;
import Reika.RotaryCraft.Base.RotaryModelBase;

import java.util.ArrayList;

import net.minecraft.tileentity.TileEntity;

public class ModelFin extends RotaryModelBase
{
	//fields
	LODModelPart Shape1;
	LODModelPart Shape2;
	LODModelPart Shape2o;
	LODModelPart Shape2n;
	LODModelPart Shape2m;
	LODModelPart Shape2l;
	LODModelPart Shape2k;
	LODModelPart Shape2j;
	LODModelPart Shape2i;
	LODModelPart Shape2h;
	LODModelPart Shape2g;
	LODModelPart Shape2f;
	LODModelPart Shape2e;
	LODModelPart Shape2d;
	LODModelPart Shape2c;
	LODModelPart Shape2b;
	LODModelPart Shape2a;

	LODModelPart Shape3;
	LODModelPart Shape3a;
	LODModelPart Shape3b;
	LODModelPart Shape3c;

	public ModelFin()
	{
		textureWidth = 128;
		textureHeight = 128;

		Shape1 = new LODModelPart(this, 0, 17);
		Shape1.addBox(0F, 0F, 0F, 16, 1, 16);
		Shape1.setRotationPoint(-8F, 23F, -8F);
		Shape1.setTextureSize(128, 128);
		Shape1.mirror = true;
		this.setRotation(Shape1, 0F, 0F, 0F);
		Shape2 = new LODModelPart(this, 0, 0);
		Shape2.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2.setRotationPoint(5F, 9F, 1F);
		Shape2.setTextureSize(128, 128);
		Shape2.mirror = true;
		this.setRotation(Shape2, 0F, 0F, 0F);
		Shape2o = new LODModelPart(this, 0, 0);
		Shape2o.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2o.setRotationPoint(5F, 9F, -7F);
		Shape2o.setTextureSize(128, 128);
		Shape2o.mirror = true;
		this.setRotation(Shape2o, 0F, 0F, 0F);
		Shape2n = new LODModelPart(this, 0, 0);
		Shape2n.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2n.setRotationPoint(-3F, 9F, 1F);
		Shape2n.setTextureSize(128, 128);
		Shape2n.mirror = true;
		this.setRotation(Shape2n, 0F, 0F, 0F);
		Shape2m = new LODModelPart(this, 0, 0);
		Shape2m.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2m.setRotationPoint(1F, 9F, 1F);
		Shape2m.setTextureSize(128, 128);
		Shape2m.mirror = true;
		this.setRotation(Shape2m, 0F, 0F, 0F);
		Shape2l = new LODModelPart(this, 0, 0);
		Shape2l.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2l.setRotationPoint(-7F, 9F, 5F);
		Shape2l.setTextureSize(128, 128);
		Shape2l.mirror = true;
		this.setRotation(Shape2l, 0F, 0F, 0F);
		Shape2k = new LODModelPart(this, 0, 0);
		Shape2k.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2k.setRotationPoint(-3F, 9F, 5F);
		Shape2k.setTextureSize(128, 128);
		Shape2k.mirror = true;
		this.setRotation(Shape2k, 0F, 0F, 0F);
		Shape2j = new LODModelPart(this, 0, 0);
		Shape2j.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2j.setRotationPoint(1F, 9F, 5F);
		Shape2j.setTextureSize(128, 128);
		Shape2j.mirror = true;
		this.setRotation(Shape2j, 0F, 0F, 0F);
		Shape2i = new LODModelPart(this, 0, 0);
		Shape2i.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2i.setRotationPoint(5F, 9F, 5F);
		Shape2i.setTextureSize(128, 128);
		Shape2i.mirror = true;
		this.setRotation(Shape2i, 0F, 0F, 0F);
		Shape2h = new LODModelPart(this, 0, 0);
		Shape2h.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2h.setRotationPoint(-7F, 9F, 1F);
		Shape2h.setTextureSize(128, 128);
		Shape2h.mirror = true;
		this.setRotation(Shape2h, 0F, 0F, 0F);
		Shape2g = new LODModelPart(this, 0, 0);
		Shape2g.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2g.setRotationPoint(5F, 9F, -3F);
		Shape2g.setTextureSize(128, 128);
		Shape2g.mirror = true;
		this.setRotation(Shape2g, 0F, 0F, 0F);
		Shape2f = new LODModelPart(this, 0, 0);
		Shape2f.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2f.setRotationPoint(-7F, 9F, -3F);
		Shape2f.setTextureSize(128, 128);
		Shape2f.mirror = true;
		this.setRotation(Shape2f, 0F, 0F, 0F);
		Shape2e = new LODModelPart(this, 0, 0);
		Shape2e.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2e.setRotationPoint(-3F, 9F, -3F);
		Shape2e.setTextureSize(128, 128);
		Shape2e.mirror = true;
		this.setRotation(Shape2e, 0F, 0F, 0F);
		Shape2d = new LODModelPart(this, 0, 0);
		Shape2d.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2d.setRotationPoint(1F, 9F, -3F);
		Shape2d.setTextureSize(128, 128);
		Shape2d.mirror = true;
		this.setRotation(Shape2d, 0F, 0F, 0F);
		Shape2c = new LODModelPart(this, 0, 0);
		Shape2c.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2c.setRotationPoint(-7F, 9F, -7F);
		Shape2c.setTextureSize(128, 128);
		Shape2c.mirror = true;
		this.setRotation(Shape2c, 0F, 0F, 0F);
		Shape2b = new LODModelPart(this, 0, 0);
		Shape2b.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2b.setRotationPoint(-3F, 9F, -7F);
		Shape2b.setTextureSize(128, 128);
		Shape2b.mirror = true;
		this.setRotation(Shape2b, 0F, 0F, 0F);
		Shape2a = new LODModelPart(this, 0, 0);
		Shape2a.addBox(0F, 0F, 0F, 2, 14, 2);
		Shape2a.setRotationPoint(1F, 9F, -7F);
		Shape2a.setTextureSize(128, 128);
		Shape2a.mirror = true;
		this.setRotation(Shape2a, 0F, 0F, 0F);

		Shape3 = new LODModelPart(this, 14, 17);
		Shape3.addBox(0F, 0F, 0F, 1, 16, 1);
		Shape3.setRotationPoint(7.5F, 24F, 7.5F);
		Shape3.setTextureSize(128, 128);
		Shape3.mirror = true;
		this.setRotation(Shape3, 0F, 0F, 0F);
		Shape3a = new LODModelPart(this, 14, 17);
		Shape3a.addBox(0F, 0F, 0F, 1, 16, 1);
		Shape3a.setRotationPoint(-8.5F, 24F, 7.5F);
		Shape3a.setTextureSize(128, 128);
		Shape3a.mirror = true;
		this.setRotation(Shape3a, 0F, 0F, 0F);
		Shape3b = new LODModelPart(this, 14, 17);
		Shape3b.addBox(0F, 0F, 0F, 1, 16, 1);
		Shape3b.setRotationPoint(-8.5F, 24F, -8.5F);
		Shape3b.setTextureSize(128, 128);
		Shape3b.mirror = true;
		this.setRotation(Shape3b, 0F, 0F, 0F);
		Shape3c = new LODModelPart(this, 14, 17);
		Shape3c.addBox(0F, 0F, 0F, 1, 16, 1);
		Shape3c.setRotationPoint(7.5F, 24F, -8.5F);
		Shape3c.setTextureSize(128, 128);
		Shape3c.mirror = true;
		this.setRotation(Shape3c, 0F, 0F, 0F);
	}

	@Override
	public void renderAll(TileEntity te, ArrayList li, float phi, float theta)
	{
		Shape1.render(te, f5);
		Shape2.render(te, f5);
		Shape2o.render(te, f5);
		Shape2n.render(te, f5);
		Shape2m.render(te, f5);
		Shape2l.render(te, f5);
		Shape2k.render(te, f5);
		Shape2j.render(te, f5);
		Shape2i.render(te, f5);
		Shape2h.render(te, f5);
		Shape2g.render(te, f5);
		Shape2f.render(te, f5);
		Shape2e.render(te, f5);
		Shape2d.render(te, f5);
		Shape2c.render(te, f5);
		Shape2b.render(te, f5);
		Shape2a.render(te, f5);

		boolean inWorld = li != null && !li.isEmpty() ? (Boolean)li.get(0) : false;
		if (inWorld) {
			Shape3.render(te, f5);
			Shape3a.render(te, f5);
			Shape3b.render(te, f5);
			Shape3c.render(te, f5);
		}
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5);
	}

}